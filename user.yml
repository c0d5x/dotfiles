# vim:ft=ansible:
---
- hosts: all
  tasks:
    # start with directories
    - name: Directories
      with_items:
        - ~/tmp
        - ~/git
        - ~/.vim/autoload
        - ~/.config/nvim/autoload
        - ~/.aws
        - ~/.irssi
        - ~/.config
        - ~/.config/i3
        - ~/.config/i3status
      file: path={{item}} state=directory mode=700 force=yes

    # shell configuration
    - name: shell configs
      file: src={{ item.src }} dest={{ item.dst }} state=link force=yes
      with_items:
        - { src: "{{ playbook_dir }}/files/zlogin.symlink", dst: "~/.zshenv" }
        - { src: "{{ playbook_dir }}/files/zlogin.symlink", dst: "~/.zlogin" }
        - { src: "{{ playbook_dir }}/files/zlogout.symlink", dst: "~/.zlogout" }
        - { src: "{{ playbook_dir }}/files/zprofile.symlink", dst: "~/.zprofile" }
        - { src: "{{ playbook_dir }}/files/zshrc.symlink", dst: "~/.zshrc" }
        - { src: "{{ playbook_dir }}/files/bashrc.symlink", dst: "~/.bashrc" }
        - { src: "{{ playbook_dir }}/files/xinitrc.symlink", dst: "~/.xinitrc" }
        - { src: "{{ playbook_dir }}/files/Xresources.symlink", dst: "~/.Xresources" }
        - { src: "{{ playbook_dir }}/files/profile.symlink", dst: "~/.profile" }
        - { src: "{{ playbook_dir }}/files/hushlogin.symlink", dst: "~/.hushlogin" }
        - { src: "{{ playbook_dir }}/files/functions.symlink", dst: "~/.functions" }
        - { src: "{{ playbook_dir }}/files/alias.symlink", dst: "~/.alias" }
        - { src: "{{ playbook_dir }}/files/alias.git.symlink", dst: "~/.alias.git" }
        - { src: "{{ playbook_dir }}/files/alias.hosts.symlink", dst: "~/.alias.hosts" }
        - { src: "{{ playbook_dir }}/files/osx.symlink", dst: "~/.osx" }
        - { src: "{{ playbook_dir }}/files/ctags.symlink", dst: "~/.ctags" }
        - { src: "{{ playbook_dir }}/files/emacs.symlink", dst: "~/.emacs" }
        - { src: "{{ playbook_dir }}/files/tmux.conf.symlink", dst: "~/.tmux.conf" }
        - { src: "{{ playbook_dir }}/files/flake8.symlink", dst: "~/.flake8" }
        - { src: "{{ playbook_dir }}/files/pylintrc.symlink", dst: "~/.pylintrc" }
        - { src: "{{ playbook_dir }}/files/gemrc.symlink", dst: "~/.gemrc" }
        - { src: "{{ playbook_dir }}/files/i3config.symlink", dst: "~/.config/i3/config" }
        - { src: "{{ playbook_dir }}/files/aws.config.symlink", dst: "~/.aws/config" }
        - { src: "{{ playbook_dir }}/files/gitconfig.symlink", dst: "~/.gitconfig" }
        - { src: "{{ playbook_dir }}/files/ansible.cfg.symlink", dst: "~/.ansible.cfg" }
        - { src: "{{ playbook_dir }}/files/vimrc.symlink", dst: "~/.vimrc" }
        - { src: "{{ playbook_dir }}/files/vimrc.symlink", dst: "~/.config/nvim/init.vim" }


    # clone zsh plugins
    - name: "Clone git://github.com/zsh-users/zsh-completions.git"
      git: repo=git://github.com/zsh-users/zsh-completions.git dest=~/git/zsh-completions force=yes
    - name: "Clone https://github.com/olivierverdier/zsh-git-prompt"
      git: repo=https://github.com/olivierverdier/zsh-git-prompt dest=~/git/zsh-git-prompt force=yes
    - name: "Clone https://github.com/zsh-users/zsh-history-substring-search"
      git: repo=https://github.com/zsh-users/zsh-history-substring-search dest=~/git/zsh-history-substring-search

    - name: "Download docker zsh completion"
      get_url:
        url: https://raw.githubusercontent.com/docker/cli/master/contrib/completion/zsh/_docker
        dest: ~/git/zsh-completions/_docker

    # nvim's plug
    - name: "vim plug nvim"
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.config/nvim/autoload/plug.vim
    - name: "vim plug vim"
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.vim/autoload/plug.vim

    # distro specific tasks
    - name: "Install base packages for Debian-like"
      include_tasks: OSs/debian-user.yml
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: "Install base OSs for Centos"
      include_tasks: OSs/centos-user.yml
      when: ansible_distribution == 'CentOS'

    - name: "Install base OSs for Fedora"
      include_tasks: OSs/fedora-user.yml
      when: ansible_distribution == 'Fedora'

    - name: "Install base OSs for Mac OS X"
      include_tasks: OSs/macosx.yml
      when: ansible_distribution == 'MacOSX'

    - name: "Install base packages for FBSD"
      include_tasks: OSs/freebsd.yml
      when: ansible_distribution == 'FreeBSD'

    # PIP modules
    - name: pip modules
      include_tasks: pip-user.yml

    - name: Install Neovim
      shell: which nvim 2>/dev/null || ~/bin/install_neovim.sh

    - name: Powerline fonts
      git: repo=https://github.com/powerline/fonts
           dest=~/git/fonts
           force=yes
      register: powerline

    - name: Nerd fonts
      git: repo=https://github.com/ryanoasis/nerd-fonts
           dest=~/git/nerdfonts
           force=yes
      register: nerdfonts

    - name: Install nerdfonts
      shell: ~/git/nerdfonts/install.sh
      args:
        chdir: ~/git/nerdfonts
      when: nerdfonts.changed

    - name: Install Powerline Fonts
      shell: ~/git/fonts/install.sh
      args:
        chdir: ~/git/fonts
      when: powerline.changed
      ignore_errors: true

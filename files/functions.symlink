#!/usr/bin/env bash
# vim:syntax=sh:ft=sh

set_title () {
  echo -n "\033]0;$1\007"
}

cdl () {
    # shellcheck disable=SC2164
    \cd "$@"
    ls -Gh
}

unicodes() {
printf "
Á = c1 | á = e1
É = c9 | é = e9
Í = cd | í = ed
Ó - d3 | ó = f3
Ú = da | ú = fa
Ñ = d1 | ñ = f1
"
}

dockerips() {
  DOCKER_IDS=($(docker ps -q))
  for id in $DOCKER_IDS; do
    docker inspect "$id" --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}} {{.Name}}'
  done
}

sshagent() {
  NEEDSAGENT=0
  SSHSOCK_STORED="$HOME/.ssh-auth-sock"
  SSHPID_STORED="$HOME/.ssh-pid-sock"
  ssh-add -l >/dev/null 2>&1
  if [ $? -eq 2 ]; then
    # agent does not respond, load stored vars
    # echo agent not responding
    if [[ -f "$SSHSOCK_STORED" ]]; then
      SSH_AUTH_SOCK=$(cat "$SSHSOCK_STORED")
      export SSH_AUTH_SOCK
      if [[ -f "$SSHPID_STORED" ]]; then
         SSH_AGENT_PID=$(cat "$SSHPID_STORED")
         export SSH_AGENT_PID
      fi
      ssh-add -l >/dev/null 2>&1
      if [ $? = 2 ]; then
        # stored values don't work
        echo "ssh-agent stored values do not work"
        NEEDSAGENT=1
      fi
    else
      # no stored files
      NEEDSAGENT=1
    fi

    if [ $NEEDSAGENT = 1 ]; then
      echo "Spawning new ssh-agent"
      rm -rf "$SSHPID_STORED" "$SSHSOCK_STORED" 2>/dev/null
      eval "$(ssh-agent)"
      echo "$SSH_AGENT_PID" > "$SSHPID_STORED"
      echo "$SSH_AUTH_SOCK" > "$SSHSOCK_STORED"
    fi
  else
    # agent responds, check if stored socket is the same
    SOCK=""
    if [[ -f "$SSHSOCK_STORED" ]]; then
      SOCK=$(cat "$SSHSOCK_STORED")
    fi
    if [[ "$SOCK" != "$SSH_AUTH_SOCK" ]]; then
      # socket is different, update
      # echo stored socket works, updating values
      echo "$SSH_AUTH_SOCK" > "$SSHSOCK_STORED"
      echo "${SSH_AUTH_SOCK//*agent\./}" > "$SSHPID_STORED"
    fi
  fi
  unset NEEDSAGENT SSHSOCK_STORED SSHPID_STORED SOCK
}

function man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    PAGER="${commands[less]:-$PAGER}" \
    _NROFF_U=1 \
      man "$@"
}

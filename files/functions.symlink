#!/usr/bin/env bash
# vim:syntax=sh:ft=sh

cdl () {
    # shellcheck disable=SC2164
    \cd "$@"
    ls -Gh
}

unicodes() {
printf "
Á = c1 | á = e1
É = c9 | é = e9
Í = cd | í = ed
Ó - d3 | ó = f3
Ú = da | ú = fa
Ñ = d1 | ñ = f1
"
}

sshagent() {
  set -x
  NEEDSAGENT=0
  SSHSOCK_STORED="$HOME/.ssh-auth-sock"
  SSHPID_STORED="$HOME/.ssh-agent-pid"
  ssh-add -l >/dev/null 2>&1
  if [ $? -eq 2 ]; then
    # agent does not respond, load stored vars
    echo agent not responding
    if [[ -f "$SSHSOCK" ]]; then
       SSH_AUTH_SOCK=$(cat "$SSHSOCK")
       SSH_AGENT_PID=$(cat "$SSHPID")
       export SSH_AUTH_SOCK SSH_AGENT_PID
       ssh-add -l >/dev/null 2>&1
       if [ $? = 2 ]; then
         # stored values don't work
         echo "ssh-agent stored values do not work"
         NEEDSAGENT=1
       fi
    else
      # no stored files
      NEEDSAGENT=1
    fi

    if [ $NEEDSAGENT = 1 ]; then
      echo "spawning new ssh-agent"
      rm -rf "$SSHPID" "$SSHSOCK" 2>/dev/null
      eval "$(ssh-agent)"
      echo "$SSH_AGENT_PID" > "$SSHPID"
      echo "$SSH_AUTH_SOCK" > "$SSHSOCK"
    fi
  else
    # agent responds, check if stored socket is the same
    SOCK=$(cat $SSHSOCK_STORED)
    if [[ "$SOCK" != "$SSH_AUTH_SOCK" ]]; then
      # socket is different, update
      echo stored socket works, updating values
      echo $SSH_AUTH_SOCK > $SSHSOCK_STORED
      echo $SSH_AUTH_SOCK|sed 's,.*agent\.,,' > $SSHPID
    fi
  fi
  unset NEEDSAGENT SSHSOCK_STORED SSHPID_STORED SOCK
  set +x
}

# vim:ft=ansible:
---
- hosts: all
  tasks:

    - name: "AWS dir"
      file: path=~/.aws state=directory mode=700 force=yes
    - name: "irssi dir"
      file: path=~/.irssi state=directory mode=700 force=yes
    - name: "config dir"
      file: path=~/.config state=directory mode=700 force=yes
    - name: "i3 config dir"
      file: path=~/.config/i3 state=directory mode=700 force=yes
    - name: "i3status dir"
      file: path=~/.config/i3status state=directory mode=700 force=yes
    - name: "zenv"
      file: src={{ playbook_dir }}/files/zlogin.symlink dest=~/.zshenv state=link force=yes
    - name: "zlogin"
      file: src={{ playbook_dir }}/files/zlogin.symlink dest=~/.zlogin state=link force=yes
    - name: "zlogout"
      file: src={{ playbook_dir }}/files/zlogout.symlink dest=~/.zlogout state=link force=yes
    - name: "zprofile"
      file: src={{ playbook_dir }}/files/zprofile.symlink dest=~/.zprofile state=link force=yes
    - name: "zshrc"
      file: src={{ playbook_dir }}/files/zshrc.symlink dest=~/.zshrc state=link force=yes
    - name: "bashrc"
      file: src={{ playbook_dir }}/files/bashrc.symlink dest=~/.bashrc state=link force=yes
    - name: "xinitrc"
      file: src={{ playbook_dir }}/files/xinitrc.symlink dest=~/.xinitrc state=link force=yes
    - name: "profile"
      file: src={{ playbook_dir }}/files/profile.symlink dest=~/.profile state=link force=yes
    - name: "hushlogin"
      file: src={{ playbook_dir }}/files/hushlogin.symlink dest=~/.hushlogin state=link force=yes
    - name: "Functions"
      file: src={{ playbook_dir }}/files/functions.symlink dest=~/.functions state=link force=yes
    - name: "Alias"
      file: src={{ playbook_dir }}/files/alias.symlink dest=~/.alias state=link force=yes
    - name: "Alias git"
      file: src={{ playbook_dir }}/files/alias.git.symlink dest=~/.alias.git state=link force=yes
    - name: "Alias hosts"
      file: src={{ playbook_dir }}/files/alias.hosts.symlink dest=~/.alias.hosts state=link force=yes
    - name: "OSX specific"
      file: src={{ playbook_dir }}/files/osx.symlink dest=~/.osx state=link force=yes
    - name: "irssi Config"
      file: src={{ playbook_dir }}/files/irssi.config.symlink dest=~/.irssi/config state=link force=yes
    - name: "ctags Config"
      file: src={{ playbook_dir }}/files/ctags.symlink dest=~/.ctags state=link force=yes
    - name: "Emacs Config"
      file: src={{ playbook_dir }}/files/emacs.symlink dest=~/.emacs state=link force=yes
    - name: "tmux config"
      file: src={{ playbook_dir }}/files/tmux.conf.symlink dest=~/.tmux.conf state=link force=yes
    - name: "flake8 config"
      file: src={{ playbook_dir }}/files/flake8.symlink dest=~/.flake8 state=link force=yes
    - name: "pylintrc config"
      file: src={{ playbook_dir }}/files/pylintrc.symlink dest=~/.pylintrc state=link force=yes
    - name: "gemrc config"
      file: src={{ playbook_dir }}/files/gemrc.symlink dest=~/.gemrc state=link force=yes
    - name: "i3 config"
      file: src={{ playbook_dir }}/files/i3config.symlink dest=~/.config/i3/config state=link force=yes
    - name: "AWS Config"
      file: src={{ playbook_dir }}/files/aws.config.symlink dest=~/.aws/config state=link force=yes
    - name: "git config"
      file: src={{ playbook_dir }}/files/gitconfig.symlink dest=~/.gitconfig state=link force=yes
    - name: "Clone git://github.com/zsh-users/zsh-completions.git"
      git: repo=git://github.com/zsh-users/zsh-completions.git dest=~/git/zsh-completions force=yes
    - name: "Clone https://github.com/olivierverdier/zsh-git-prompt"
      git: repo=https://github.com/olivierverdier/zsh-git-prompt dest=~/git/zsh-git-prompt force=yes
    - name: "Clone https://github.com/zsh-users/zsh-history-substring-search"
      git: repo=https://github.com/zsh-users/zsh-history-substring-search dest=~/git/zsh-history-substring-search
    - name: "Download docker zsh completion"
      get_url:
        url: https://raw.githubusercontent.com/docker/cli/master/contrib/completion/zsh/_docker
        dest: ~/git/zsh-completions/_docker
    - name: "nvim config dir"
      file: path=~/.config/nvim/autoload state=directory

      # #################################

    - name: "Install base packages for Debian-like"
      include: OSs/debian.yml
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: "Install base OSs for Centos"
      include: OSs/centos.yml
      when: ansible_distribution == 'CentOS'

    - name: "Install base OSs for Fedora"
      include: OSs/fedora.yml
      when: ansible_distribution == 'Fedora'

    - name: "Install base OSs for Mac OS X"
      include: OSs/macosx.yml
      when: ansible_distribution == 'MacOSX'

    - name: "Install base packages for FBSD"
      include: OSs/freebsd.yml
      when: ansible_distribution == 'FreeBSD'

      # #################################

    - name: pip modules
      include: OSs/pip.yml
    - name: "Ansible configuration"
      file: src={{ playbook_dir }}/files/ansible.cfg.symlink dest=~/.ansible.cfg state=link force=yes
    - name: "vim plug nvim"
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.config/nvim/autoload/plug.vim
    - name: "vim config dir"
      file: path=~/.vim/autoload state=directory
    - name: "vim plug vim"
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.vim/autoload/plug.vim
    - name: "vimrc"
      file: src={{ playbook_dir }}/files/vimrc.symlink dest=~/.vimrc state=link force=yes
    - name: "vimrc nvim"
      file: src={{ playbook_dir }}/files/vimrc.symlink dest=~/.config/nvim/init.vim state=link force=yes
      #    - name: "vim PlugInstall"
      #      command: vim +PlugInstall +qa!
    - name: Powerline fonts
      git: repo=https://github.com/powerline/fonts
           dest=~/git/fonts
      register: powerline
    - name: Install Powerline Fonts
      shell: ~/git/fonts/install.sh
      when: powerline.changed
      ignore_errors: true

" vim: syntax=vim

syntax on

set ruler
set number

set autoread

set laststatus=2

set autoindent
set smartindent
set scrolloff=10

set wildmode=list:longest,full

set backspace=indent,eol,start

set showmatch
set incsearch

set noerrorbells        " annoying sounds
set novisualbell
set t_vb=

set clipboard=unnamed

set splitbelow
set splitright

set ffs=unix,mac,dos

set foldmethod=syntax
set foldlevel=3

set textwidth=120        " more realistic size
set colorcolumn=+1
highlight ColorColumn guibg=#2d2d2d ctermbg=246
" highlight Normal ctermfg=grey ctermbg=#0e143d

set tabstop=4
set shiftwidth=4
set expandtab

set background=dark
colorscheme solarized
set guifont=Monaco:h13

filetype plugin on

" fix crontab -e problem
" set backupskip=/tmp/*,/private/tmp/*
autocmd filetype crontab setlocal nobackup nowritebackup

let mapleader = "\<Space>"

nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :qa<CR>
nnoremap <Leader>n :tabnext<CR>
nnoremap <Leader>c :tabnew<CR>
nnoremap <Leader>e :tabedit $MYVIMRC<CR>
nnoremap <Leader>b :NERDTree<CR>

if exists(':RainbowParenthesesToggle')
  autocmd VimEnter * RainbowParenthesesToggle
  autocmd Syntax * RainbowParenthesesLoadRound
  autocmd Syntax * RainbowParenthesesLoadSquare
  autocmd Syntax * RainbowParenthesesLoadBraces
endif

let g:Powerline_symbols = 'fancy'

let g:vimwiki_hl_headers = 1
let g:vimwiki_hl_cb_checked = 1
let vimwiki_path=$HOME.'/git/work/vimwiki'
let vimwiki_html_path=$HOME.'/git/work/vimwiki_html'
let g:vimwiki_list = [{       'path': vimwiki_path,
                       \ 'path_html': vimwiki_html_path,
                       \ 'template_path': vimwiki_html_path.'/assets',
                       \ 'template_default': 'default',
                       \ 'template_ext': '.tpl'}]

if exists(':Neomake')
    autocmd! BufWritePost,BufEnter * Neomake
endif

autocmd VimEnter * nested :call tagbar#autoopen(1)

" Python section
augroup python
au!
au FileType python setl expandtab     " Use spaces instead of tabs.
au FileType python setl tabstop=4     " A tab counts for 4 spaces.
au FileType python setl softtabstop=4 " Causes backspace to delete 4 spaces.
au FileType python setl shiftwidth=4  " Shift by 4 spaces.
au FileType python nnoremap <Leader>r :w<CR>:!python -m pdb %<CR>
augroup end

" Ruby section
augroup ruby
au!
au FileType ruby nnoremap <Leader>r :w<CR>:!ruby -r debug %<CR>
augroup end

" Javascript section
augroup javascript
au!
augroup end


" Git commits
augroup gitcommit
au!
au FileType gitcommit setl spell     " Enable spellchecking.
au FileType gitcommit setl expandtab " Use spaces instead of tabs.
augroup end

" Markdown
augroup markdown
au!
au FileType markdown setl spell         " Enable spellchecking.
au FileType markdown setl expandtab     " Use spaces instead of tabs.
au FileType markdown setl tabstop=2     " Lists are indented with 2 spaces.
au FileType markdown setl softtabstop=2 " Causes backspace to delete 2 spaces.
au FileType markdown setl shiftwidth=2  " Shift by 2 spaces.
augroup end

" autocmd FileType c nnoremap <buffer> <silent> <C-]> :YcmCompleter GoTo<cr>


" vim: syntax=vim foldmethod=marker foldlevel=0

""""""""""""""""""" Global variables
"{{{

syntax on

" display number on left side and status bar
set ruler
set number

" monitor file changes
set autoread

" display statusbar
set laststatus=2

" indents
set autoindent
set smartindent

" lines from cursor to bottom
set scrolloff=10

set wildmode=list:longest,full

" decent backspace
set backspace=indent,eol,start

" when searching
set showmatch
set incsearch
set hlsearch

" annoying sounds
set noerrorbells
set novisualbell
set t_vb=

" required for osx clipboard
set clipboard=unnamed

" history and undo levels
set history=1000
set undolevels=1000

" on splits
set splitbelow
set splitright

" default file format
set ffs=unix,mac,dos

set foldmethod=syntax
set foldlevel=3

set textwidth=120        " more realistic size
set colorcolumn=+1
highlight ColorColumn guibg=#2d2d2d ctermbg=246
" highlight Normal ctermfg=grey ctermbg=#0e143d

" Tabs
set tabstop=4
set shiftwidth=4
set expandtab

set wrap
set linebreak
set showbreak=â†ª

set background=dark
set guifont=Monaco:h13

filetype plugin on

let mapleader = "\<Space>"
let maplocalleader = "\\"
" }}}

""""""""""""""""""" Plugins to install
" {{{
call plug#begin('~/.vim/plugged')
Plug 'davidhalter/jedi-vim'

Plug 'sirver/ultisnips'
Plug 'honza/vim-snippets'

Plug 'mhinz/vim-startify'
Plug 'scrooloose/nerdtree'
Plug 'junegunn/vim-easy-align'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'majutsushi/tagbar'
Plug 'benekastah/neomake'
Plug 'vimwiki'
Plug 'mattn/calendar-vim'
" Plug 'hdima/python-syntax'
Plug 'bling/vim-bufferline'
Plug 'airblade/vim-gitgutter'
Plug 'motemen/git-vim'
Plug 'altercation/vim-colors-solarized'
Plug 'kien/rainbow_parentheses.vim'
Plug 'powerline/powerline'
Plug 'jceb/vim-orgmode'
Plug 'ctrlpvim/ctrlp.vim'
call plug#end()
" }}}

""""""""""""""""""" Plugin configurations
" {{{
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts            = 1

let g:jedi#goto_command             = "<leader>d"
let g:jedi#goto_assignments_command = "<leader>g"
let g:jedi#goto_definitions_command = ""
let g:jedi#documentation_command    = "K"
let g:jedi#usages_command           = "<leader>u"
let g:jedi#completions_command      = "<C-Space>"
let g:jedi#rename_command           = "<leader>r"

let g:UltiSnipsExpandTrigger       = "<tab>"
let g:UltiSnipsJumpForwardTrigger  = "<c-b>"
let g:UltiSnipsJumpBackwardTrigger = "<c-z>"

let g:snips_author       = "Jose Hidalgo"
let g:snips_author_email = "c0d5x@protonmail.com"
let g:snips_email        = "c0d5x@protonmail.com"
let g:snips_github       = "https://github.com/c0d5x"

try
    " solarized requires solarized iterm's colors set in preferences
    colorscheme solarized
catch
    colorscheme darkblue
endtry

"if exists(':RainbowParenthesesActivate')
  autocmd VimEnter * RainbowParenthesesActivate
  autocmd Syntax * RainbowParenthesesLoadRound
  autocmd Syntax * RainbowParenthesesLoadSquare
  autocmd Syntax * RainbowParenthesesLoadBraces
"endif

let g:Powerline_symbols = 'fancy'

let g:vimwiki_hl_headers = 1
let g:vimwiki_hl_cb_checked = 1
let vimwiki_path=$HOME.'/git/work/vimwiki'
let vimwiki_html_path=$HOME.'/git/work/vimwiki_html'
let g:vimwiki_list = [{       'path': vimwiki_path,
                       \ 'path_html': vimwiki_html_path,
                       \ 'template_path': vimwiki_html_path.'/assets',
                       \ 'template_default': 'default',
                       \ 'template_ext': '.tpl'}]


let g:tagbar_width = 25
let g:tagbar_compact = 1
let g:tagbar_singleclick = 1
let g:tagbar_autoshowtag = 1

" }}}

""""""""""""""""""" Autocommands & Autogroups
" {{{

" fix crontab -e problem
" set backupskip=/tmp/*,/private/tmp/*
autocmd filetype crontab setlocal nobackup nowritebackup

" Reload when vimrc is changed
augroup reload_vimrc " {
    autocmd!
    autocmd BufWritePost $MYVIMRC source $MYVIMRC
augroup END " }

try
    autocmd! BufWritePost,BufEnter * Neomake
endtry

autocmd VimEnter * nested :call tagbar#autoopen(1)
" autocmd VimEnter * RainbowParenthesesActivate

" Python section
augroup python
au!
au FileType python setl expandtab     " Use spaces instead of tabs.
au FileType python setl tabstop=4     " A tab counts for 4 spaces.
au FileType python setl softtabstop=4 " Causes backspace to delete 4 spaces.
au FileType python setl shiftwidth=4  " Shift by 4 spaces.
au FileType python setl foldmethod=indent " fold method is indent for python
au FileType python nnoremap <Leader>r :!python -m pdb %<CR>
augroup end

" Ruby section
augroup ruby
au!
au FileType ruby nnoremap <Leader>r :w<CR>:!ruby -r debug %<CR>
augroup end

" Javascript section
augroup javascript
au!
augroup end


" Git commits
augroup gitcommit
au!
au FileType gitcommit setl spell     " Enable spellchecking.
au FileType gitcommit setl expandtab " Use spaces instead of tabs.
augroup end

" Markdown
augroup markdown
au!
au FileType markdown setl spell         " Enable spellchecking.
au FileType markdown setl expandtab     " Use spaces instead of tabs.
au FileType markdown setl tabstop=2     " Lists are indented with 2 spaces.
au FileType markdown setl softtabstop=2 " Causes backspace to delete 2 spaces.
au FileType markdown setl shiftwidth=2  " Shift by 2 spaces.
augroup end

" autocmd FileType c nnoremap <buffer> <silent> <C-]> :YcmCompleter GoTo<cr>
" }}}

""""""""""""""""""" Mappings
" {{{
nnoremap <Leader>w :w<CR>
nnoremap <Leader>q :qa<CR>
nnoremap <Leader>n :tabnext<CR>
nnoremap <Leader>m :tabprev<CR>
nnoremap <Leader>c :tabnew<CR>
nnoremap <Leader>e :tabedit $MYVIMRC<CR>
nnoremap <Leader>b :NERDTree<CR>

map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" }}}
